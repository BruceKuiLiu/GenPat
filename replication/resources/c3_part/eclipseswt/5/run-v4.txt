run cluster:5
PATTERN:
-	int controlRight = rect.right;
+	if (drawBackground) {
+		drawBackground = false;
+		Region region = null;
+		if ((style & SWT.CHECK) != 0 || gridWidth != 0) {
+			region = new Region (display);
+			Rectangle clientArea = getClientArea ();
+			int headerHeight = getHeaderHeight ();
+			clientArea.y += headerHeight;
+			clientArea.height -= headerHeight;
+			region.add (clientArea);
+			int rgn = OS.NewRgn();
+			if ((style & SWT.CHECK) != 0) {
+				if (OS.GetDataBrowserItemPartBounds (handle, id, Table.CHECK_COLUMN_ID, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {
+					OS.SetRectRgn (rgn, (short)rect.left, (short)clientArea.y, (short)(rect.right + gridWidth), (short)(clientArea.y + clientArea.height));
+					OS.DiffRgn (region.handle, rgn, region.handle);
+				}
+			}
+			if (gridWidth != 0) {
+				if (columnCount == 0) {
+					if (OS.GetDataBrowserItemPartBounds (handle, id, Table.COLUMN_ID, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {
+						OS.SetRectRgn (rgn, (short)rect.right, (short)clientArea.y, (short)(rect.right + gridWidth), (short)(clientArea.y + clientArea.height));
+						OS.DiffRgn (region.handle, rgn, region.handle);					
+					}
+				} else {
+					for (int i = 0; i < columnCount; i++) {
+						if (OS.GetDataBrowserItemPartBounds (handle, id, columns[i].id, OS.kDataBrowserPropertyEnclosingPart, rect) == OS.noErr) {
+							OS.SetRectRgn (rgn, (short)rect.right, (short)clientArea.y, (short)(rect.right + gridWidth), (short)(clientArea.y + clientArea.height));
+							OS.DiffRgn (region.handle, rgn, region.handle);
+						}
+					}
+				}
+			}
+			OS.DisposeRgn (rgn);
+		}
+		if (region != null) gc.setClipping (region);
+		fillBackground (handle, gc.handle, null);
+		if (region != null) {
+			gc.setClipping ((Rectangle)null);
+			region.dispose ();
+		}
+	}
-	boolean focused = false;
-	Control control = findBackgroundControl ();
-	boolean controlBackground = control != null && (control.background != null || control.backgroundImage != null);
-	boolean itemBackground = item.background != null || (item.cellBackground != null && item.cellBackground [columnIndex] != null);
-	if (controlBackground || itemBackground) {
-		if (itemBackground || !OS.HIVIEW) {
-			gc.setBackground (item.getBackground (columnIndex));
-			gc.fillRectangle (itemX, itemY, itemWidth, itemHeight);
-		} else {
-			Rectangle bounds = new Rectangle (itemX, itemY, itemWidth, itemHeight);
-			fillBackground (handle, gc.handle, bounds);
-			if (columnCount == 0 || columnCount - 1 == columnIndex) {
-				bounds.x = itemX + itemWidth + gridWidth;
-				bounds.width = controlRight - itemX;
-				fillBackground (handle, gc.handle, bounds);
-			}
-		}
-	}
-		if (focused) event.detail |= SWT.FOCUSED;
-		focused = (event.detail & SWT.FOCUSED) != 0;
-		if (selected && (style & SWT.FULL_SELECTION) != 0) {
-			if ((style & SWT.HIDE_SELECTION) == 0 || hasFocus ()) {
-				gc.fillRectangle (itemX, itemY, itemWidth, itemHeight - 1);
-			}
-		}
-		if (image != null) {
-			gc.drawImage (image, 0, 0, imageBounds.width, imageBounds.height, x, y + (height - this.imageBounds.height) / 2, this.imageBounds.width, this.imageBounds.height);
-			x += this.imageBounds.width + gap;
-		}
-		if (selected) {
-			if (columnIndex == 0 && (style & SWT.FULL_SELECTION) == 0) {
-				if ((style & SWT.HIDE_SELECTION) == 0 || hasFocus ()) {
-					gc.fillRectangle (x - 1, y, extent.x + 2, itemHeight - 1);
-				}
+		int stringX = x, imageX = x;
+		if (image != null) stringX += this.imageBounds.width + gap;
+		if (selected && ((style & SWT.HIDE_SELECTION) == 0 || hasFocus ())) {
+			if ((style & SWT.FULL_SELECTION) != 0) {
+				gc.fillRectangle (itemX, itemY, itemWidth, itemHeight - 1);
+			} else if (columnIndex == 0) {
+				gc.fillRectangle (stringX - 1, y, extent.x + 2, itemHeight - 1);
+			}
+		} else {
+			if (item.background != null || (item.cellBackground != null && item.cellBackground [columnIndex] != null)) {
+				gc.setBackground (item.getBackground (columnIndex));
+				gc.fillRectangle (itemX, itemY, itemWidth, itemHeight);
-		gc.drawString (text, x, y + (height - extent.y) / 2, true);
+		if (image != null) {
+			gc.drawImage (image, 0, 0, imageBounds.width, imageBounds.height, imageX, y + (height - this.imageBounds.height) / 2, this.imageBounds.width, this.imageBounds.height);
+		}
+		gc.drawString (text, stringX, y + (height - extent.y) / 2, true);
-		if (focused) event.detail |= SWT.FOCUSED;

TP, FP = 0,0
original_before=
int drawItemProc(int browser,int id,int property,int itemState,int theRect,int gdDepth,int colorDevice){
int index=id-1;
if(!(0<=index&&index<itemCount)){
return OS.noErr;
}
int columnIndex=0;
if(columnCount>0){
for(columnIndex=0;columnIndex<columnCount;columnIndex++){
if(columns[columnIndex].id==property){
break;
}
}
if(columnIndex==columnCount){
return OS.noErr;
}
}
int offsetX=0,offsetY=0;
Rect rect=new Rect();
OS.GetControlBounds(handle,rect);
int controlRight=rect.right;
if(!OS.HIVIEW){
offsetX=rect.left;
offsetY=rect.top;
}
lastIndexOf=index;
TableItem item=_getItem(index);
if((style&SWT.VIRTUAL)!=0){
if(!item.cached){
if(!checkData(item,false)){
return OS.noErr;
}
if(setScrollWidth(item)){
if(OS.GetDataBrowserItemPartBounds(handle,id,property,OS.kDataBrowserPropertyEnclosingPart,rect)==OS.noErr){
int x=rect.left-offsetX;
int y=rect.top-offsetY;
int width=rect.right-rect.left;
int height=rect.bottom-rect.top;
redrawWidget(handle,x,y,width,height,false);
}
return OS.noErr;
}
}
}
OS.memcpy(rect,theRect,Rect.sizeof);
int x=rect.left-offsetX;
int y=rect.top-offsetY;
int width=rect.right-rect.left;
int height=rect.bottom-rect.top;
GC gc=paintGC;
if(gc==null){
GCData data=new GCData();
int[] port=new int[1];
OS.GetPort(port);
data.port=port[0];
gc=GC.carbon_new(this,data);
}
OS.GetDataBrowserItemPartBounds(handle,id,property,OS.kDataBrowserPropertyEnclosingPart,rect);
if(!OS.HIVIEW){
OS.OffsetRect(rect,(short)-offsetX,(short)-offsetX);
}
int gridWidth=getLinesVisible()?GRID_WIDTH:0;
int itemX=rect.left+gridWidth;
int itemY=rect.top;
int itemWidth=rect.right-rect.left-gridWidth;
int itemHeight=rect.bottom-rect.top+1;
OS.CGContextSaveGState(gc.handle);
int itemRgn=OS.NewRgn();
OS.SetRectRgn(itemRgn,(short)itemX,(short)itemY,(short)(itemX+itemWidth),(short)(itemY+itemHeight));
int clip=OS.NewRgn();
OS.GetClip(clip);
if(!OS.HIVIEW){
OS.OffsetRgn(clip,(short)-offsetX,(short)-offsetY);
}
OS.SectRgn(clip,itemRgn,itemRgn);
OS.DisposeRgn(clip);
Region region=Region.carbon_new(display,itemRgn);
boolean draw=true;
boolean selected=(itemState&OS.kDataBrowserItemIsSelected)!=0;
selected|=(itemState&OS.kDataBrowserItemIsDragTarget)!=0;
boolean focused=false;
Control control=findBackgroundControl();
boolean controlBackground=control!=null&&(control.background!=null||control.backgroundImage!=null);
boolean itemBackground=item.background!=null||(item.cellBackground!=null&&item.cellBackground[columnIndex]!=null);
if(controlBackground||itemBackground){
if(itemBackground||!OS.HIVIEW){
gc.setBackground(item.getBackground(columnIndex));
gc.fillRectangle(itemX,itemY,itemWidth,itemHeight);
}else {
Rectangle bounds=new Rectangle(itemX,itemY,itemWidth,itemHeight);
fillBackground(handle,gc.handle,bounds);
if(columnCount==0||columnCount-1==columnIndex){
bounds.x=itemX+itemWidth+gridWidth;
bounds.width=controlRight-itemX;
fillBackground(handle,gc.handle,bounds);
}
}
}
gc.setClipping(region);
if(selected){
gc.setBackground(display.getSystemColor(SWT.COLOR_LIST_SELECTION));
gc.setForeground(display.getSystemColor(SWT.COLOR_LIST_SELECTION_TEXT));
}else {
gc.setBackground(item.getBackground(columnIndex));
gc.setForeground(item.getForeground(columnIndex));
}
gc.setFont(item.getFont(columnIndex));
Image image=item.getImage(columnIndex);
String text=item.getText(columnIndex);
Point extent=gc.stringExtent(text);
int contentWidth=extent.x,paintWidth=contentWidth;
Rectangle imageBounds=null;
int gap=getGap();
if(image!=null){
imageBounds=image.getBounds();
contentWidth+=this.imageBounds.width+gap;
}
draw=true;
if(hooks(SWT.MeasureItem)){
Event event=new Event();
event.item=item;
event.index=columnIndex;
event.gc=gc;
event.width=contentWidth;
event.height=itemHeight;
sendEvent(SWT.MeasureItem,event);
if(this.itemHeight==-1){
this.itemHeight=event.height;
OS.SetDataBrowserTableViewRowHeight(handle,(short)event.height);
}
if(setScrollWidth(item)){
redrawWidget(handle,false);
}
contentWidth=event.width;
itemHeight=event.height;
gc.setClipping(region);
}
if(hooks(SWT.EraseItem)){
Event event=new Event();
event.item=item;
event.index=columnIndex;
event.gc=gc;
event.x=itemX;
event.y=itemY;
event.width=itemWidth;
event.height=itemHeight;
if(selected){
event.detail|=SWT.SELECTED;
}
if(focused){
event.detail|=SWT.FOCUSED;
}
sendEvent(SWT.EraseItem,event);
draw=event.doit;
selected=(event.detail&SWT.SELECTED)!=0;
focused=(event.detail&SWT.FOCUSED)!=0;
gc.setClipping(region);
}
if(draw){
if(selected&&(style&SWT.FULL_SELECTION)!=0){
if((style&SWT.HIDE_SELECTION)==0||hasFocus()){
gc.fillRectangle(itemX,itemY,itemWidth,itemHeight-1);
}
}
if(columnCount!=0){
TableColumn column=columns[columnIndex];
if((column.style&SWT.CENTER)!=0){
x+=(width-contentWidth)/2;
}
if((column.style&SWT.RIGHT)!=0){
x+=width-contentWidth;
}
}
if(image!=null){
gc.drawImage(image,0,0,imageBounds.width,imageBounds.height,x,y+(height-this.imageBounds.height)/2,this.imageBounds.width,this.imageBounds.height);
x+=this.imageBounds.width+gap;
}
if(selected){
if(columnIndex==0&&(style&SWT.FULL_SELECTION)==0){
if((style&SWT.HIDE_SELECTION)==0||hasFocus()){
gc.fillRectangle(x-1,y,extent.x+2,itemHeight-1);
}
}
}
gc.drawString(text,x,y+(height-extent.y)/2,true);
}
if(hooks(SWT.PaintItem)){
Event event=new Event();
event.item=item;
event.index=columnIndex;
event.gc=gc;
event.x=x;
event.y=y;
event.width=paintWidth;
event.height=itemHeight;
if(selected){
event.detail|=SWT.SELECTED;
}
if(focused){
event.detail|=SWT.FOCUSED;
}
sendEvent(SWT.PaintItem,event);
}
OS.CGContextRestoreGState(gc.handle);
OS.DisposeRgn(itemRgn);
if(gc!=paintGC){
gc.dispose();
}
return OS.noErr;
}
